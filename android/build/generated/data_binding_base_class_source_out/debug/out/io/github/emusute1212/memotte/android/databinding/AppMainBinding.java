// Generated by data binding compiler. Do not edit!
package io.github.emusute1212.memotte.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Space;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.motion.widget.MotionLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.fragment.app.FragmentContainerView;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import io.github.emusute1212.memotte.android.R;
import io.github.emusute1212.memotte.android.viewmodel.MemoListViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class AppMainBinding extends ViewDataBinding {
  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final CoordinatorLayout content;

  @NonNull
  public final FragmentContainerView editFragment;

  @NonNull
  public final Space editFragmentTopNegativeMargin;

  @NonNull
  public final FragmentContainerView memoListFragment;

  @NonNull
  public final Space negativeMargin;

  @NonNull
  public final MotionLayout rootContent;

  @NonNull
  public final HeaderBinding toolbar;

  @NonNull
  public final CollapsingToolbarLayout toolbarLayout;

  @NonNull
  public final View touchBlockView;

  @Bindable
  protected MemoListViewModel mViewModel;

  protected AppMainBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppBarLayout appBar, CoordinatorLayout content, FragmentContainerView editFragment,
      Space editFragmentTopNegativeMargin, FragmentContainerView memoListFragment,
      Space negativeMargin, MotionLayout rootContent, HeaderBinding toolbar,
      CollapsingToolbarLayout toolbarLayout, View touchBlockView) {
    super(_bindingComponent, _root, _localFieldCount);
    this.appBar = appBar;
    this.content = content;
    this.editFragment = editFragment;
    this.editFragmentTopNegativeMargin = editFragmentTopNegativeMargin;
    this.memoListFragment = memoListFragment;
    this.negativeMargin = negativeMargin;
    this.rootContent = rootContent;
    this.toolbar = toolbar;
    this.toolbarLayout = toolbarLayout;
    this.touchBlockView = touchBlockView;
  }

  public abstract void setViewModel(@Nullable MemoListViewModel viewModel);

  @Nullable
  public MemoListViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static AppMainBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.app_main, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static AppMainBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<AppMainBinding>inflateInternal(inflater, R.layout.app_main, root, attachToRoot, component);
  }

  @NonNull
  public static AppMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.app_main, null, false, component)
   */
  @NonNull
  @Deprecated
  public static AppMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<AppMainBinding>inflateInternal(inflater, R.layout.app_main, null, false, component);
  }

  public static AppMainBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static AppMainBinding bind(@NonNull View view, @Nullable Object component) {
    return (AppMainBinding)bind(component, view, R.layout.app_main);
  }
}
