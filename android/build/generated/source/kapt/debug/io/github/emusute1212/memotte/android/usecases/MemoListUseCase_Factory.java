// Generated by Dagger (https://dagger.dev).
package io.github.emusute1212.memotte.android.usecases;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import io.github.emusute1212.memotte.android.data.repository.MemoRepository;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MemoListUseCase_Factory implements Factory<MemoListUseCase> {
  private final Provider<MemoRepository> memoRepositoryProvider;

  public MemoListUseCase_Factory(Provider<MemoRepository> memoRepositoryProvider) {
    this.memoRepositoryProvider = memoRepositoryProvider;
  }

  @Override
  public MemoListUseCase get() {
    return newInstance(memoRepositoryProvider.get());
  }

  public static MemoListUseCase_Factory create(Provider<MemoRepository> memoRepositoryProvider) {
    return new MemoListUseCase_Factory(memoRepositoryProvider);
  }

  public static MemoListUseCase newInstance(MemoRepository memoRepository) {
    return new MemoListUseCase(memoRepository);
  }
}
